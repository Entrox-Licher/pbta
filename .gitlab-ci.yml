image: node:16

before_script:
  - apt-get update
  - apt-get install zip

cache:
  paths:
    - node_modules/

stages:
  - init
  - build

############### BETA ################

# TODO: Automatic beta builds are disabled in favor of tagged releases.

# init-beta:
#   stage: init
#   image: docker:latest
#   variables:
#     VAR_NAME: BETA_BUILD_NUMBER
#     TOKEN: ${CI_PIPELINE_IID_TOKEN}
#     GITLAB_URL: "https://gitlab.com"
#   before_script:
#   - apk add --update curl jq
#   script:
#   - "VAR=$(curl -s -f  --header \"PRIVATE-TOKEN: ${TOKEN}\" \"${GITLAB_URL}/api/v4/projects/${CI_PROJECT_ID}/variables/${VAR_NAME}\" | jq  -r '.value' ) "
#   - let VAR=VAR+1
#   - "curl -s -f --request PUT --header \"PRIVATE-TOKEN: ${TOKEN}\" \"${GITLAB_URL}/api/v4/projects/${CI_PROJECT_ID}/variables/${VAR_NAME}\" --form \"value=${VAR}\" "
#   only:
#     - beta

build-prod:
  stage: build
  script:
    - export
    - npm ci
    - npm run build
    - node update-build-tags.js --branch=$CI_COMMIT_BRANCH --gitlabpath=$CI_PROJECT_PATH --jobname=$CI_JOB_NAME  --tag=$CI_COMMIT_TAG --bucket=$S3_BUCKET
    - cp ./dist/system.json ./system.json
    - mv dist pbta
    - zip -q pbta.zip -r pbta
  artifacts:
    paths:
      - pbta.zip
      - system.json
  only:
    # Examples: 0.1.0, 0.1.2.beta-1, 0.3.4.alpha
    # At least one digit + period, followed by additional digits, followed by an optional beta/alpha, followed by a build number.
    - /^(\d+\.)+(\d+)*((beta|alpha)+(-)*\d+)*$/i
  except:
    - branches